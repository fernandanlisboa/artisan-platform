"""adjust_pk_returning_behavior

Revision ID: 7337baba6b02
Revises: 7ec6f17b775c
Create Date: 2025-06-05 12:32:48.480404

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '7337baba6b02'
down_revision: Union[str, None] = '7ec6f17b775c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - ADJUSTED MANUALLY ###
    
    # Tabela addresses
    op.execute("ALTER TABLE addresses MODIFY COLUMN address_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela categories
    op.execute("ALTER TABLE categories MODIFY COLUMN category_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela messages
    op.execute("ALTER TABLE messages MODIFY COLUMN message_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela order_items
    op.execute("ALTER TABLE order_items MODIFY COLUMN order_item_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela orders
    op.execute("ALTER TABLE orders MODIFY COLUMN order_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela products
    op.execute("ALTER TABLE products MODIFY COLUMN product_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela reviews
    op.execute("ALTER TABLE reviews MODIFY COLUMN review_id VARCHAR(36) NOT NULL DEFAULT (UUID())")

    # Tabela users
    op.execute("ALTER TABLE users MODIFY COLUMN user_id VARCHAR(36) NOT NULL DEFAULT (UUID())")
    
    # Adicione aqui qualquer outra alteração que esta migração deveria fazer,
    # como garantir que address_id em users seja NOT NULL se essa foi uma mudança
    # op.execute("ALTER TABLE users MODIFY COLUMN address_id VARCHAR(36) NOT NULL") # Exemplo


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - ADJUSTED MANUALLY ###

    # Reverte para o estado anterior. Se o default não existia e a coluna era NOT NULL.
    # Se a coluna era NULLABLE=True antes, ajuste para NULL.
    # A ordem aqui é a inversa do upgrade.

    op.execute("ALTER TABLE users MODIFY COLUMN user_id VARCHAR(36) NOT NULL") # Remove o default

    op.execute("ALTER TABLE reviews MODIFY COLUMN review_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE products MODIFY COLUMN product_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE orders MODIFY COLUMN order_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE order_items MODIFY COLUMN order_item_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE messages MODIFY COLUMN message_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE categories MODIFY COLUMN category_id VARCHAR(36) NOT NULL")

    op.execute("ALTER TABLE addresses MODIFY COLUMN address_id VARCHAR(36) NOT NULL")
