"""change address id in user to not Unique

Revision ID: 3f6549aaf2af
Revises: ae59d265da3e
Create Date: 2025-06-11 11:13:51.168127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '3f6549aaf2af'
down_revision: Union[str, None] = 'ae59d265da3e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               server_default=sa.text('now()'),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               server_default=sa.text('now()'),
               existing_nullable=True)

    # Primeiro, remova a restrição de chave estrangeira
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Pegar o nome da restrição FK - pode ser diferente no seu banco
        # Geralmente é algo como 'users_ibfk_1'
        batch_op.drop_constraint('users_ibfk_1', type_='foreignkey')
        # Remover o índice único
        batch_op.drop_index('address_id')
        # Recriar a chave estrangeira sem o índice único
        batch_op.create_foreign_key(
            'users_ibfk_1', 'addresses', ['address_id'], ['address_id']
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('address_id'), ['address_id'], unique=True)

    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               server_default=sa.text('(now())'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               server_default=sa.text('(now())'),
               existing_nullable=True)

    # ### end Alembic commands ###
